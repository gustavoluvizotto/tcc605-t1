/*
    Gilberto Volpe Neto
    Gustavo Luvizotto Cesar
    Lucas Aoki Heredia
 */


options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = false;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}

PARSER_BEGIN(Simple1)

public class Simple1 {

  public static void main(String args[]) throws ParseException {
    Simple1 parser = new Simple1(System.in);
    parser.Input();
  }

}

PARSER_END(Simple1)

void Input() :
{}
{
  MatchedBraces() ("\n"|"\r")* <EOF>
}

void MatchedBraces() :
{}
{
  "{" [ MatchedBraces() ] "}"
}

TOKEN : { < DIV: "/" > }
TOKEN : { < PERCENT : "%" > }
TOKEN : { < EQU : "==" > }
TOKEN : { < LEQU : "<=" > }
TOKEN : { < GEQU : ">=" > }
TOKEN : { < LESS : "<" > }
TOKEN : { < GREAT : ">" > }
TOKEN : { < NEQU : "!=" > }
TOKEN : { < ASSIGN : "=" > }
TOKEN : { < COMMA : "," > }
TOKEN : { < COLON : ":" > }
TOKEN : { < SEMICOL : ";" > }
TOKEN : { < NOT : "!" > }
TOKEN : { < AND : "&&" > }
TOKEN : { < OR : "||" > }
TOKEN : { < NUMBER : <DIGIT> > }
TOKEN : { < #DIGIT : (["0"-"9"])+ > }