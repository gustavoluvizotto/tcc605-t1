Expressões
43. Digit ::= ("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9")
42. <Number> ::=   Digit { Digit }
41. Letter ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" |
 "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" |
 "Y" | "Z"| "_"
40. <Ident> ::= Letter { Letter | Digit }
39. <Unary_Operator> ::=   "!"  |  "­"
38. <Factor> ::= ( <Ident> | <Number> | "(" <Expression> ")" )
37. <Unary> ::= <Unary_Operator> <Unary> | <Factor>
36. <Term> ::= <Factor> {("*" | "/" | "%") <Factor>}
35. <SimpleExpr> ::= ["+" | "­"] <Term> {("+" | "­") <Term>}
34. <InequationExpr> ::= <SimpleExpr> [("<" | "<=" | ">" | ">=") <SimpleExpr>]
33. <EqualityExpr> ::= <InequationExpr> [( "=="  |  "!=" ) <InequationExpr>]
32. <AndExpr> :: = <EqualityExp> {"&&" <EqualityExpr>}
31. <OrExpr> ::= <AndExpr> {"||" <AndExpr>}
30. <Expression> ::= <OrExpr>

Comandos
20. <Assignment> ::= "=" <Expression>
19. <ExpList> ::= <Expression> {"," <Expression>}
18. <ProcedureCall> ::= "(" [<ExpList>] ")"
17. <IfStatement> ::= "if" "(" <Expression> ")" "{" <LoopStatementSequence> "}"
 ["else" "{" LoopStatementSequence> [<Break>] "}" ]
16. <Break> ::= "break" ";"
15. <SwitchStatement> ::= "switch" "(" <Expression> ")" "{"
 { <LoopStatementSequence> } { "case" <Expression> ":"
 <LoopStatementSequence> } [ "default" ":" <LoopStatementSequence>] "}"
14. <SelectionStatement> ::= < IfStatement> | <SwitchStatement>
13. <WhileStatement> ::= "while" "("<Expression>")" "{" <LoopStatementSequence>
 "}"
12. <Statement> ::= [ ( <Ident> (<Assignment>  | <ProcedureCall> ) |
 <WhileStatement> | <SelectionStatement> ) ";" { ";" } ]
11. <LoopStatementSequence> ::= { <Statement> | <Break> }
10. <StatementSequence> ::= { <Statement> }

Declarações
9. Type ::= "int"
8. <IdentList> ::= ( <Ident> [ <Assignment> ] ) {"," <IdentList> }
7. <VariableDeclaration> ::= Type <IdentList> ";"
6. <Parameter> ::= Type <Ident>
5. <ParametersList> ::= <Parameter> {"," <Parameter>}
4. <ProcedureHeading> ::= <Ident> "(" [<Parameters>] ")"
3. <ProcedureBody> ::= {<VariableDeclaration>} <StatementSequence>
2. <ProcedureDeclaration> ::= "void" <ProcedureHeading> "{" <ProcedureBody> "}"

Programa
1. <Program> ::= {<VariableDeclaration>} <ProcedureDeclaration>
 { <ProcedureDeclaration> }
